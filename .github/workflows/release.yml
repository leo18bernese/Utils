name: Publish Release

on:
  push:
    branches:
      - main

jobs:
  publish-release:
    runs-on: ubuntu-latest
    if: startsWith(github.event.head_commit.message, 'updated version')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Extract version from commit message
        id: get-version
        run: |
          commit_message="${{ github.event.head_commit.message }}"
          version=$(echo "$commit_message" | awk '{print $NF}')
          echo "::set-output name=version::$version"

      - name: Set up Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Get latest release tag
        id: get-latest-release
        run: echo "::set-output name=tag::$(git describe --tags $(git rev-list --tags --max-count=1))"

      - name: Get commit messages since last release
        id: get-commit-messages
        run: |
          latest_tag=${{ steps.get-latest-release.outputs.tag }}
          commit_messages=$(git log $latest_tag..HEAD --oneline --no-decorate)
          echo "::set-output name=messages::$commit_messages"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get-version.outputs.version }}
          release_name: "Release ${{ steps.get-version.outputs.version }}"
          body: ${{ steps.get-commit-messages.outputs.messages }}
          draft: false
          prerelease: false
